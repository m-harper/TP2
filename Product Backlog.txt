UI	( * optional)
	Title screen
.5		Intro screen
	Menu bar
.5		New game
			Re add all pieces
			Set piece locations
			Reset timers
			Reset turns
.5		Save state			*
1		Help menu			*
.25		Exit
	Basic board
.25		Background
.75		Lines
.5		Player pieces
			Black
			Red
1+		Movement animation		*
1+		Destruction animation		*
	Movement controls
2		Mouse input
2		Keyboard input
			Piece selection
			Move location
.5		Selected piece			*
2		Valid moves			*
			Highlight lines
.5		Highlight move-to tile		*
.5		End turn
	Game info
.25		Pieces remaining		*
.5		Time remaining			*
.5		Turn time		
.25		Turns remaining
	Game over screen
.25		Which player won
.25		Pieces remaining		*


AI

	Sooner:
2		Select random move
3		Construct minimax tree
3		Determine possible next moves
1		Calculate utility for each move
2			Construct utility function
1		Search 1 move ahead
	Later:
2		Alpha-Beta pruning
2		Search(practical): search N > 1 moves ahead
4		Add Iterative Deepening
2		Detect whether to go for a tie
	
	Optional:
1		Search(ideal): search 50 moves ahead
6		Multithreaded graph search
4		Precomputed hash table of moves


Game Logic


	Sooner:
2		Enforce valid movements
3		Piece elimination
		Check end conditions
1			Win
1			Draw- 50 moves
		
	Later:
2		Enforce time limit for player
2		Enforce time limit for AI

	Optional:


General
	
	Agile works:
0.5		Make initial burndown chart 
0.5		Product backlog
1.5		Backlogs for each sprint
1.5		Three times of retrospective for each sprint

